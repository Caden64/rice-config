(defpoll time :interval "30s" `date "+%I:%M %p"`)

(defpoll mem :interval "5s" `bar_utilities/target/release/bar_utilities mem`)

(defpoll bat :interval "30s" `bar_utilities/target/release/bar_utilities bat`)

(deflisten win_title :initial "idk" `bar_utilities/target/release/bar_utilities window`)

(deflisten cur_workspace :initial 1 `bar_utilities/target/release/bar_utilities work`)

(deflisten workspaces :initial "[]" `bar_utilities/target/release/bar_utilities open_windows`)

(defwindow bar
  :monitor 0
  :geometry (geometry 
    :x "0%"
    :y "15px"
    :width "95%"
    :height "30px"
    :anchor "top center"
  )
  :stacking "bg"
  :reserve (structs 
  :distance "20px"
  :side "top"
  :windowtype "dock"
  :wm-ignore false
  )
  (box :class "back"
  
  (box
    (for workspace in workspaces
      (label :class "${workspace.id == cur_workspace ? "selected" : "${workspace.windows>0?"window":"text"}"}" :text "${workspace.id}")
    )
  )
        
  (label :class "text" :text {mem})
  (label :class "text" :text {win_title})
  (label :class "text" :text "${time}")
  (label :class "${bat}" :text "${EWW_BATTERY.BAT0.capacity}%"))
)
